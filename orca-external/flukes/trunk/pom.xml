<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>orca</groupId>
  <artifactId>flukes</artifactId>
  <version>0.1-SNAPSHOT</version>
  <name>FLUKES</name>
  <description>FLUKES - ORCA NDL graph editor</description>
  <url>http://geni-images.renci.org/webstart/</url>
  <issueManagement>
  	<system>ORCA Trac</system>
  	<url>https://geni-orca.renci.org/trac</url>
  </issueManagement>
  <ciManagement>
  	<system>RENCI CI</system>
  	<url>http://ci-dev.renci.org/hudson</url>
  </ciManagement>
  <scm>
  	<url>https://geni-orca.renci.org/svn</url>
  </scm>
  <organization>
  	<name>RENCI, The University of North Carolina at Chapel Hill</name>
  	<url>http://www.renci.org</url>
  </organization>
  <distributionManagement>
  	<repository>
  	  <id>geni-orca-libs</id>
      <name>RENCI NEXUS</name>
      <url>https://ci-dev.renci.org/nexus/content/repositories/geni-orca-libs/</url>
    </repository>
  </distributionManagement>
  <repositories>
	<repository>
		<id>geni-orca-libs</id>
		<name>Orca Project Maven Repository</name>
		<url>http://ci-dev.renci.org/nexus/content/repositories/geni-orca-libs</url>
	</repository>
  </repositories>
	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>1.0-beta-6</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo.webstart</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<!--
				<version>1.0-beta-2-SNAPSHOT</version>
				-->
				<executions>
        			<execution>
					<id>pack-jnlp</id>
        				<phase>install</phase>
         				<goals>
            					<goal>jnlp-single</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
          				</goals>
        			</execution>
       			</executions>
        		<configuration>
        			<!--outputDirectory></outputDirectory--> <!-- not required?? -->

         			<!--
         					Set to true to exclude all transitive dependencies. Default is false.
         			-->
         			<excludeTransitive>false</excludeTransitive>
         			<inputTemplate>jnlp/template.vm</inputTemplate>

         			<!-- The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory -->
         			<libPath>lib</libPath>

         			<!-- [optional] transitive dependencies filter - if omitted, all transitive dependencies are included -->
         			<dependencies>
	           			<!-- Note that only groupId and artifactId must be specified here. because of a limitation of the Include/ExcludesArtifactFilter -->
	           			<!-- 
	           			<includes>
	             			<include>commons-logging:commons-logging</include>
	             			<include>commons-cli:commons-cli</include>
	           			</includes>	           			
	           			<excludes>
	             			<exclude></exclude>
	           			<excludes>
	           			-->
         			</dependencies>

         			<!--resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory--> <!-- default value -->

         			<!-- JNLP generation -->
         			<jnlp>
	           			<!-- default values -->
	           			<!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath-->
	           			<!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
	           			<!-- defaults to launch.jnlp -->
	           			<outputFile>flukes.jnlp</outputFile> 
	
	           			<!-- used to automatically identify the jar containing the main class. -->
	           			<!-- this is perhaps going to change -->
	           			<mainClass>orca.flukes.GUI</mainClass>
         			</jnlp>


         			<!-- SIGNING -->
         			<!-- defining this will automatically sign the jar and its dependencies, if necessary -->
         			<sign>
         				<!-- we need to override passwords easily from the command line. ${keypass} -->
         				<!-- ${storepass} -->

			        	<keystore>flukes</keystore>
			            <keypass>flukespass</keypass>  
			            <storepass>flukespass</storepass> 
			            <storetype>JKS</storetype>
			            <alias>IliaBaldine</alias>
			            <validity>3650</validity>
						
			            <!-- only required for generating the keystore -->
			            <dnameCn>Ilia Baldine</dnameCn>
			            <dnameOu>NRIG</dnameOu>
			            <dnameO>RENCI</dnameO>
			            <dnameL>ChapelHill</dnameL>
			            <dnameSt>NC</dnameSt>
			            <dnameC>US</dnameC>
						
						<!-- verify that the signing operation succeeded -->
			            <verify>true</verify> 
						
			            <!-- KEYSTORE MANAGEMENT -->
           				<keystoreConfig>
             				<delete>true</delete> 
             				<gen>true</gen>     
           				</keystoreConfig>
         			</sign>

			        <!-- BUILDING PROCESS -->
			
			        <pack200>true</pack200>
			        <!-- default force when pack200 false, true when pack200 selected ?? -->
			 		<gzip>true</gzip> 
			
			   		<!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
					<outputJarVersions>false</outputJarVersions>
			
			  		<!--install>false</install--> <!-- not yet supported -->
			  		<verbose>true</verbose>
       			</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<executions>
					<execution>
						<id>upload-jnlp</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<url>scp://geni-images.renci.org/</url>
							<fromDir>target/jnlp</fromDir>
							<includes>*</includes>
							<toDir>images/webstart</toDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
  <dependencies>
  	<dependency>
  		<groupId>orca</groupId>
  		<artifactId>ndl</artifactId>
  		<version>3.1-SNAPSHOT</version>
  		<type>jar</type>
  	</dependency>
  	    <dependency>
    	<groupId>net.sf.jung</groupId>
    	<artifactId>jung-api</artifactId>
    	<version>2.0.1</version>
    </dependency>
    <dependency>
    	<groupId>net.sf.jung</groupId>
    	<artifactId>jung-3d</artifactId>
    	<version>2.0.1</version>
    </dependency>
    <dependency>
    	<groupId>net.sf.jung</groupId>
    	<artifactId>jung-algorithms</artifactId>
    	<version>2.0.1</version>
    </dependency>
    <dependency>
    	<groupId>net.sf.jung</groupId>
    	<artifactId>jung-graph-impl</artifactId>
    	<version>2.0.1</version>
    </dependency>
    <dependency>
    	<groupId>net.sf.jung</groupId>
    	<artifactId>jung-jai</artifactId>
    	<version>2.0.1</version>
    </dependency>
    <dependency>
    	<groupId>net.sf.jung</groupId>
    	<artifactId>jung-visualization</artifactId>
    	<version>2.0.1</version>
    </dependency>
    <dependency>
    	<groupId>net.sf.jung</groupId>
    	<artifactId>jung-io</artifactId>
    	<version>2.0.1</version>
    </dependency>
    <dependency>
    	<groupId>net.java.dev.swing-layout</groupId>
    	<artifactId>swing-layout</artifactId>
    	<version>1.0.2</version>
    </dependency>
    <dependency>
    	<groupId>hyperrealm</groupId>
    	<artifactId>kiwi</artifactId>
    	<version>2.4.1</version>
    </dependency>
    <dependency>
    	<groupId>net.sourceforge.collections</groupId>
    	<artifactId>collections-generic</artifactId>
    	<version>4.01</version>
    	<type>pom</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>commons-lang</groupId>
    	<artifactId>commons-lang</artifactId>
    	<version>2.5</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
  </dependencies>
</project>
